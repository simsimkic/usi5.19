<Window x:Class="ZdravoCorp.View.EquipmentDisplayView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZdravoCorp.View"
        mc:Ignorable="d"
        Title="EquipmentDisplayView" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonShape" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
    </Window.Resources>

    <Window.Background>
        <ImageBrush ImageSource="/Images/doktor.jpg" />
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <!-- Back button -->
        <Button Style="{DynamicResource RoundedButtonShape}" x:Name="BackButton" Content="Back" HorizontalContentAlignment="Center" Margin="685,10,10,10" Command="{Binding Back}" />

        <!-- Search box and button -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10,10,120,10" Width="Auto">
            <TextBox x:Name="SearchBox" Margin="0 0 10 0" Width="670" Background="#FF90C2EE" Foreground="White" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                        <Grid>
                                            <TextBlock x:Name="PlaceholderText" Text="Search..." Margin="5 0 0 0" 
                                           Foreground="LightGray" Visibility="Collapsed"/>
                                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>
            </TextBox>

        </StackPanel>

        <!-- Filter box -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10" Height="Auto" Width="Auto">
            <Grid Name="FilterGrid" Height="Auto" Width="780">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.6*"/>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="0.6*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
                <Expander Grid.Column="0" Header="TypeOfRoom" Foreground="White" IsExpanded="False">
                    <StackPanel Margin="10">
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="OperatingRoom" IsChecked="{Binding Path=IsOperatingRoomChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="ExaminationRoom" IsChecked="{Binding Path=IsExaminationRoomChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="PatientRoom" IsChecked="{Binding Path=IsPatientRoomChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="WaitingRoom" IsChecked="{Binding Path=IsWaitingRoomChecked, Mode=TwoWay}" />
                    </StackPanel>
                </Expander>

                <Expander Grid.Column="1" Header="TypeOfEquipment" Foreground="White" IsExpanded="False">
                    <StackPanel Margin="10">
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="Appointments" IsChecked="{Binding Path=IsAppointmentsChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="Surgeries" IsChecked="{Binding Path=IsSurgeriesChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="RoomFurniture" IsChecked="{Binding Path=IsRoomFurnitureChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="HallwayEquipments" IsChecked="{Binding Path=IsHallwayEquipmentsChecked, Mode=TwoWay}" />
                    </StackPanel>
                </Expander>

                <Expander Grid.Column="2" Header="Quantity" Foreground="White" IsExpanded="False">
                    <StackPanel Margin="10">
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="Zero" IsChecked="{Binding Path=IsZeroChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="Less Than 10" IsChecked="{Binding Path=IsLessThan10Checked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="More than 10" IsChecked="{Binding Path=IsMoreThan10Checked, Mode=TwoWay}" />
                    </StackPanel>
                </Expander>

                <Expander Grid.Column="3" Header="WareHouse" Foreground="White" IsExpanded="False">
                    <StackPanel Margin="10">
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="Inside" IsChecked="{Binding Path=IsInsideChecked, Mode=TwoWay}" />
                        <CheckBox Background="#FF90C2EE" Foreground="White" Content="Outside" IsChecked="{Binding Path=IsOutsideChecked, Mode=TwoWay}" />
                    </StackPanel>
                </Expander>

                <Button Grid.Column="4" Style="{DynamicResource RoundedButtonShape}" x:Name="FilterButton" Content="Reset Fliters" Background="#FF90C2EE"  Foreground="White" HorizontalContentAlignment="Center" Command="{Binding ResetFilters}" Width="150" Height="20" />
            </Grid>
        </StackPanel>
        

        <!-- Data table -->
        <DataGrid x:Name="DataTable" Grid.Row="2" Margin="10" AutoGenerateColumns="False" Background="Transparent" ItemsSource="{Binding Equipments}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Item1.Id}"  Width="1*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Item1.Name}"  Width="1*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Equipment Type" Binding="{Binding Item1.EquipmentType}" Width="1*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Room Type" Binding="{Binding Item2}" Width="1*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Quantity" Binding="{Binding Item3}"  Width="1*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#FF90C2EE" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="#90C2EE" Opacity="0.4" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Foreground" Value="White" />
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
    </Grid>
</Window>
