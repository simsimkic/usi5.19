<Window x:Class="ZdravoCorp.View.LogInView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:viewmodel="clr-namespace:ZdravoCorp.ViewModel" xmlns:model="clr-namespace:ZdravoCorp.Model"
        mc:Ignorable="d"
        Title="LogInSystem" WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize" Height="450" Width="800" Background="#FF0F4467">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonShape" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Images/doktor.jpg"/>
        </Grid.Background>

        <TextBlock HorizontalAlignment="Left" Height="90" Margin="140,49,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="523" FontSize="24" TextAlignment="Center" RenderTransformOrigin="0.513,-0.457" FontWeight="Bold" FontFamily="Ebrima" Foreground="White" Opacity="0.95">
            <TextBlock.Effect>
                <DropShadowEffect/>
            </TextBlock.Effect>
            <TextBlock.OpacityMask>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </TextBlock.OpacityMask>
			<Run Text="Welcome to Hospital Management system"/>
			<Run/>
        </TextBlock>
        <TextBox x:Name="UsernameTextBox" HorizontalAlignment="Left" Height="35" Margin="337,144,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="264" FontSize="16" Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock HorizontalAlignment="Left" Height="30" Margin="200,217,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="91" Foreground="White" FontSize="16" FontWeight="Bold">
			<Run Text="Password:"/>
			<LineBreak/>
			<Run/>
        </TextBlock>
        <TextBlock HorizontalAlignment="Left" Height="30" Margin="200,144,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="91" FontSize="16" FontWeight="Bold" Foreground="White">
			<Run Text="Username:"/>
			<LineBreak/>
			<Run/>
			<LineBreak/>
			<Run/>
        </TextBlock>
        <TextBox x:Name="PasswordTextBox" FontSize="16" HorizontalAlignment="Left" Height="35" Margin="337,217,0,0" VerticalAlignment="Top" Width="264" Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <Button Style="{DynamicResource RoundedButtonShape}" Content="Login"  Background="#FF90C2EE" Margin="337,290,199,89" Foreground="White" FontSize="20" FontWeight="Bold" >
            <Button.Command>
                <Binding Path="LoginCommand">
                </Binding>
            </Button.Command>
            <Button.CommandParameter>
                <MultiBinding Converter="{viewmodel:LoginParametersConverter}">
                    <Binding Path="Text" ElementName="UsernameTextBox"/>
                    <Binding Path="Text" ElementName="PasswordTextBox"/>
                </MultiBinding>
            </Button.CommandParameter>
            <Button.Effect>
                <DropShadowEffect/>
            </Button.Effect>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>

        </Button>
    </Grid>
</Window>
